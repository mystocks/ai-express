/*!
 * -------------------------------------------
 * Copyright (c) 2019, Horizon Robotics, Inc.
 * All rights reserved.
 * \File     msg_registry.h
 * \Author Songshan Gong
 * \Mail     songshan.gong@horizon.ai
 * \Version  1.0.0.0
 * \Date     2019-07-30
 * \Brief    xplugin message registry
 * \DO NOT MODIFY THIS COMMENT, \
 * \WHICH IS AUTO GENERATED BY EDITOR
 * -------------------------------------------
 */

#ifndef INCLUDE_XPROTO_MESSAGE_PLUGINFLOW_MSG_REGISTRY_H_
#define INCLUDE_XPROTO_MESSAGE_PLUGINFLOW_MSG_REGISTRY_H_

#include <map>
#include <mutex>
#include <string>

namespace horizon {
namespace vision {
namespace xproto {
typedef int32_t XPluginMsgTypeHandle;
#define XPLUGIN_INVALID_MSG_TYPE -1
class XPluginMsgRegistry {
 public:
  XPluginMsgTypeHandle RegisterOrGet(const std::string &name);

  XPluginMsgTypeHandle Register(const std::string &name);

  XPluginMsgTypeHandle Get(const std::string &name);

  static XPluginMsgRegistry &Instance();

 private:
  std::mutex mutex_;
  std::map<std::string, XPluginMsgTypeHandle> fmap_;
  int32_t counter_{0};

  XPluginMsgRegistry();
  ~XPluginMsgRegistry();
};

#define XPLUGIN_REGISTER_MSG_TYPE(key)                                        \
  static horizon::vision::xproto::XPluginMsgTypeHandle                        \
      __make__##key##__xplugin_msg_type__ =                                   \
          horizon::vision::xproto::XPluginMsgRegistry::Instance().Register(   \
              #key);

}  // namespace xproto
}  // namespace vision
}  // namespace horizon

#endif  // INCLUDE_XPROTO_MESSAGE_PLUGINFLOW_MSG_REGISTRY_H_

